{"ast":null,"code":"var _jsxFileName = \"/home/eric/covisource/CoviSource/src/CoviSource/Components/UtilityComponents/SearchBar/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./SearchBar.scss\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { isMobile } from \"CoviSource/UtilityFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nSearchBar.propTypes = {\n  tags: propTypes.arrayOf(String),\n  callBackFunction: propTypes.func\n};\nexport default function SearchBar(props) {\n  _s();\n\n  const {\n    tags,\n    callBackFunction\n  } = props;\n  const [tagData, setTagData] = useState(tags);\n  const onSearchButtonClick = callBackFunction;\n\n  const removeTagData = indexToRemove => {\n    setTagData([...tagData.filter((_, index) => index !== indexToRemove)]);\n  };\n\n  const addTagData = event => {\n    if (event.target.value !== \"\") {\n      setTagData([...tagData, event.target.value]);\n      event.target.value = \"\";\n    }\n\n    let input = document.getElementById(\"searchbar-input\");\n    input.placeholder = \"Enter Requirements...\";\n  };\n\n  const renderTags = function () {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tags\",\n      children: tagData.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => removeTagData(index),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag-close-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"searchbar-input\",\n        type: \"text\",\n        onKeyUp: event => event.key === \"Enter\" ? addTagData(event) : null,\n        placeholder: \"Search what you need\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: isMobile() ? \"sm\" : \"lg\",\n        onClick: onSearchButtonClick,\n        color: \"primary\",\n        value: \"Search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), renderTags()]\n  }, void 0, true);\n}\n\n_s(SearchBar, \"kwdJnt0PmBubi55VVtBrKowdT5U=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/eric/covisource/CoviSource/src/CoviSource/Components/UtilityComponents/SearchBar/SearchBar.js"],"names":["React","useState","propTypes","Button","isMobile","SearchBar","tags","arrayOf","String","callBackFunction","func","props","tagData","setTagData","onSearchButtonClick","removeTagData","indexToRemove","filter","_","index","addTagData","event","target","value","input","document","getElementById","placeholder","renderTags","map","tag","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEAC,SAAS,CAACH,SAAV,GAAsB;AACpBI,EAAAA,IAAI,EAAEJ,SAAS,CAACK,OAAV,CAAkBC,MAAlB,CADc;AAEpBC,EAAAA,gBAAgB,EAAEP,SAAS,CAACQ;AAFR,CAAtB;AAKA,eAAe,SAASL,SAAT,CAAmBM,KAAnB,EAA0B;AAAA;;AACvC,QAAM;AAAEL,IAAAA,IAAF;AAAQG,IAAAA;AAAR,MAA6BE,KAAnC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACK,IAAD,CAAtC;AACA,QAAMQ,mBAAmB,GAAGL,gBAA5B;;AACA,QAAMM,aAAa,GAAIC,aAAD,IAAmB;AACvCH,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,KAAKH,aAAvC,CAAJ,CAAD,CAAV;AACD,GAFD;;AAGA,QAAMI,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BV,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaS,KAAK,CAACC,MAAN,CAAaC,KAA1B,CAAD,CAAV;AACAF,MAAAA,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACD;;AAED,QAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAZ;AACAF,IAAAA,KAAK,CAACG,WAAN,GAAoB,uBAApB;AACD,GARD;;AAUA,QAAMC,UAAU,GAAG,YAAY;AAC7B,wBACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACGhB,OAAO,CAACiB,GAAR,CAAY,CAACC,GAAD,EAAMX,KAAN,kBACX;AAAI,QAAA,OAAO,EAAE,MAAMJ,aAAa,CAACI,KAAD,CAAhC;AAAA,gCACE;AAAA,oBAAOW;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA8CX,KAA9C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,iBADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAGE,KAAD,IACPA,KAAK,CAACU,GAAN,KAAc,OAAd,GAAwBX,UAAU,CAACC,KAAD,CAAlC,GAA4C,IAJhD;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,MAAD;AACE,QAAA,IAAI,EAAEjB,QAAQ,KAAK,IAAL,GAAY,IAD5B;AAEE,QAAA,OAAO,EAAEU,mBAFX;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAmBGc,UAAU,EAnBb;AAAA,kBADF;AAuBD;;GAvDuBvB,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./SearchBar.scss\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { isMobile } from \"CoviSource/UtilityFunctions\";\n\nSearchBar.propTypes = {\n  tags: propTypes.arrayOf(String),\n  callBackFunction: propTypes.func,\n};\n\nexport default function SearchBar(props) {\n  const { tags, callBackFunction } = props;\n  const [tagData, setTagData] = useState(tags);\n  const onSearchButtonClick = callBackFunction;\n  const removeTagData = (indexToRemove) => {\n    setTagData([...tagData.filter((_, index) => index !== indexToRemove)]);\n  };\n  const addTagData = (event) => {\n    if (event.target.value !== \"\") {\n      setTagData([...tagData, event.target.value]);\n      event.target.value = \"\";\n    }\n\n    let input = document.getElementById(\"searchbar-input\");\n    input.placeholder = \"Enter Requirements...\";\n  };\n\n  const renderTags = function () {\n    return (\n      <ul className=\"tags\">\n        {tagData.map((tag, index) => (\n          <li onClick={() => removeTagData(index)} key={index}>\n            <span>{tag}</span>\n            <span className=\"tag-close-icon\">\n              <i className=\"fas fa-times\"></i>\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"tag-input\">\n        <input\n          id=\"searchbar-input\"\n          type=\"text\"\n          onKeyUp={(event) =>\n            event.key === \"Enter\" ? addTagData(event) : null\n          }\n          placeholder=\"Search what you need\"\n        />\n        <Button\n          size={isMobile() ? \"sm\" : \"lg\"}\n          onClick={onSearchButtonClick}\n          color=\"primary\"\n          value=\"Search\"\n        >\n          Search\n        </Button>\n      </div>\n      {renderTags()}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}