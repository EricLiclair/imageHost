{"ast":null,"code":"var _jsxFileName = \"/home/eric/covisource/CoviSource/src/components/Snackbar/SnackbarContent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"assets/jss/material-kit-react/components/snackbarContentStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function SnackbarContent(props) {\n  _s();\n\n  const {\n    message,\n    color,\n    close,\n    icon\n  } = props;\n  const classes = useStyles();\n  var action = [];\n\n  const closeAlert = () => {\n    setAlert(null);\n  };\n\n  if (close !== undefined) {\n    action = [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: closeAlert,\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        className: classes.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)];\n  }\n\n  let snackIcon = null;\n\n  switch (typeof icon) {\n    case \"object\":\n      snackIcon = /*#__PURE__*/_jsxDEV(props.icon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }, this);\n      break;\n\n    case \"string\":\n      snackIcon = /*#__PURE__*/_jsxDEV(Icon, {\n        className: classes.icon,\n        children: props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this);\n      break;\n\n    default:\n      snackIcon = null;\n      break;\n  }\n\n  const [alert, setAlert] = React.useState( /*#__PURE__*/_jsxDEV(Snack, {\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [snackIcon, message, close !== undefined ? action : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this),\n    classes: {\n      root: classes.root + \" \" + classes[color],\n      message: classes.message + \" \" + classes.container\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this));\n  return alert;\n}\n\n_s(SnackbarContent, \"6Ir79eEW4J5nzhtsyubUtqcwUus=\", false, function () {\n  return [useStyles];\n});\n\n_c = SnackbarContent;\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackbarContent\");","map":{"version":3,"sources":["/home/eric/covisource/CoviSource/src/components/Snackbar/SnackbarContent.js"],"names":["React","PropTypes","makeStyles","Snack","IconButton","Icon","Close","styles","useStyles","SnackbarContent","props","message","color","close","icon","classes","action","closeAlert","setAlert","undefined","iconButton","snackIcon","alert","useState","root","container","propTypes","node","isRequired","oneOf","bool","oneOfType","object","string"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\n\nimport styles from \"assets/jss/material-kit-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function SnackbarContent(props) {\n  const { message, color, close, icon } = props;\n  const classes = useStyles();\n  var action = [];\n  const closeAlert = () => {\n    setAlert(null);\n  };\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={closeAlert}\n      >\n        <Close className={classes.close} />\n      </IconButton>,\n    ];\n  }\n  let snackIcon = null;\n  switch (typeof icon) {\n    case \"object\":\n      snackIcon = <props.icon className={classes.icon} />;\n      break;\n    case \"string\":\n      snackIcon = <Icon className={classes.icon}>{props.icon}</Icon>;\n      break;\n    default:\n      snackIcon = null;\n      break;\n  }\n  const [alert, setAlert] = React.useState(\n    <Snack\n      message={\n        <div>\n          {snackIcon}\n          {message}\n          {close !== undefined ? action : null}\n        </div>\n      }\n      classes={{\n        root: classes.root + \" \" + classes[color],\n        message: classes.message + \" \" + classes.container,\n      }}\n    />\n  );\n  return alert;\n}\n\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n"]},"metadata":{},"sourceType":"module"}