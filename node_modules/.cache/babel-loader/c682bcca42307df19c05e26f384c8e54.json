{"ast":null,"code":"var _jsxFileName = \"/home/eric/covisource/CoviSource/src/CoviSource/Components/UtilityComponents/Map/Map.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Combobox, ComboboxInput, ComboboxOption, ComboboxPopover } from \"@reach/combobox\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport \"./mapstyles.scss\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport styles from \"./Map.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  googleMapsApiKey: \"AIzaSyCxttBHhvoDHLXbUgnMtjO3OVDw46iFSQw\",\n  libraries: [\"places\"]\n};\nconst mapContainerStyle = {\n  width: \"20vw\",\n  height: \"20vh\"\n};\nconst options = {\n  styles: styles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nMap.propTypes = {\n  currentPosition: propTypes.object,\n  setter: propTypes.func,\n  setpanTo: propTypes.any\n};\n\nfunction Map(props) {\n  _s();\n\n  const {\n    currentPosition,\n    setter,\n    setpanTo\n  } = props;\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript(config);\n  const [position, setPosition] = useState({\n    lat: currentPosition.lat,\n    lng: currentPosition.lng\n  });\n\n  const onLoad = () => {\n    setter(position);\n  };\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  console.log(setPosition, setpanTo);\n\n  if (loadError) {\n    return \"Error Loading Map\";\n  }\n\n  if (!isLoaded) {\n    return \"Map loading...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gmap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapsearch\",\n      children: /*#__PURE__*/_jsxDEV(MapSearch, {\n        currentPosition: position,\n        panTo: panTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 10,\n      center: position,\n      options: options,\n      onLoad: onMapLoad,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        onLoad: onLoad,\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"3RL9vsrcIaERxWaqkg9EdtRYR64=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nMapSearch.propTypes = {\n  currentPosition: propTypes.object,\n  panTo: propTypes.func\n};\n\nfunction MapSearch(props) {\n  _s2();\n\n  const {\n    currentPosition,\n    panTo\n  } = props;\n  const [position, setPosition] = useState(currentPosition);\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => position.lat,\n        lng: () => position.lng\n      },\n      radius: 100 * 1000\n    }\n  });\n\n  if (ready) {\n    console.log(position);\n  }\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address: address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      const newPos = {\n        lat: lat,\n        lng: lng\n      };\n      setPosition(newPos);\n      panTo(newPos);\n    } catch (err) {\n      console.log(\"error!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Combobox, {\n      onSelect: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(ComboboxInput, {\n        value: value,\n        onChange: e => {\n          setValue(e.target.value);\n        },\n        disabled: !ready,\n        placeholder: \"Search for your institution here\",\n        className: \"mapsearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComboboxPopover, {\n        children: status === \"OK\" && data.map(({\n          id,\n          description\n        }) => /*#__PURE__*/_jsxDEV(ComboboxOption, {\n          value: description\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n} // Map.defaultProps = {\n//   places: false\n// };\n\n\n_s2(MapSearch, \"ubGTjHVwUpbm5q28YRiGtA0e2s0=\", false, function () {\n  return [usePlacesAutocomplete];\n});\n\n_c2 = MapSearch;\nexport default Map;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"MapSearch\");","map":{"version":3,"sources":["/home/eric/covisource/CoviSource/src/CoviSource/Components/UtilityComponents/Map/Map.js"],"names":["React","useCallback","useRef","useState","propTypes","Combobox","ComboboxInput","ComboboxOption","ComboboxPopover","usePlacesAutocomplete","getGeocode","getLatLng","GoogleMap","useLoadScript","Marker","styles","config","googleMapsApiKey","libraries","mapContainerStyle","width","height","options","disableDefaultUI","zoomControl","Map","currentPosition","object","setter","func","setpanTo","any","props","isLoaded","loadError","position","setPosition","lat","lng","onLoad","mapRef","onMapLoad","map","current","panTo","setZoom","console","log","MapSearch","ready","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","radius","handleSelect","address","results","newPos","err","e","target","id","description"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxOption,\n  ComboboxPopover,\n} from \"@reach/combobox\";\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport \"./mapstyles.scss\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport styles from \"./Map.style\";\n\nconst config = {\n  googleMapsApiKey: \"AIzaSyCxttBHhvoDHLXbUgnMtjO3OVDw46iFSQw\",\n  libraries: [\"places\"],\n};\n\nconst mapContainerStyle = {\n  width: \"20vw\",\n  height: \"20vh\",\n};\n\nconst options = {\n  styles: styles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nMap.propTypes = {\n  currentPosition: propTypes.object,\n  setter: propTypes.func,\n  setpanTo: propTypes.any,\n};\n\nfunction Map(props) {\n  const { currentPosition, setter, setpanTo } = props;\n  const { isLoaded, loadError } = useLoadScript(config);\n  const [position, setPosition] = useState({\n    lat: currentPosition.lat,\n    lng: currentPosition.lng,\n  });\n  const onLoad = () => {\n    setter(position);\n  };\n  const mapRef = useRef();\n\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(14);\n  }, []);\n\n  console.log(setPosition, setpanTo);\n\n  if (loadError) {\n    return \"Error Loading Map\";\n  }\n  if (!isLoaded) {\n    return \"Map loading...\";\n  }\n\n  return (\n    <div className=\"gmap\">\n      <div className=\"mapsearch\">\n        <MapSearch currentPosition={position} panTo={panTo} />\n      </div>\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={10}\n        center={position}\n        options={options}\n        onLoad={onMapLoad}\n      >\n        <Marker onLoad={onLoad} position={position} />\n      </GoogleMap>\n    </div>\n  );\n}\n\nMapSearch.propTypes = {\n  currentPosition: propTypes.object,\n  panTo: propTypes.func,\n};\n\nfunction MapSearch(props) {\n  const { currentPosition, panTo } = props;\n  const [position, setPosition] = useState(currentPosition);\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => position.lat,\n        lng: () => position.lng,\n      },\n      radius: 100 * 1000,\n    },\n  });\n  if (ready) {\n    console.log(position);\n  }\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n    try {\n      const results = await getGeocode({ address: address });\n      const { lat, lng } = await getLatLng(results[0]);\n      const newPos = {\n        lat: lat,\n        lng: lng,\n      };\n      setPosition(newPos);\n      panTo(newPos);\n    } catch (err) {\n      console.log(\"error!\");\n    }\n  };\n\n  return (\n    <div>\n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          disabled={!ready}\n          placeholder=\"Search for your institution here\"\n          className=\"mapsearch\"\n        />\n        <ComboboxPopover>\n          {status === \"OK\" &&\n            data.map(({ id, description }) => (\n              <ComboboxOption key={id} value={description} />\n            ))}\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n\n// Map.defaultProps = {\n//   places: false\n// };\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}